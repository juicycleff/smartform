name: Conventional Commits Release

on:
  push:
    branches: [ main ]

jobs:
  check-conventional-commits:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
      repository-projects: write
      id-token: write
    outputs:
      should_release: ${{ steps.changelog.outputs.skipped == 'false' }}
      new_version: ${{ steps.changelog.outputs.version }}
      new_tag: ${{ steps.changelog.outputs.tag }}
      changelog: ${{ steps.changelog.outputs.clean_changelog }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Create a version.json file if it doesn't exist
      - name: Ensure version file exists
        run: |
          if [ ! -f .github/version.json ]; then
            mkdir -p .github
            echo '{"version": "0.1.0"}' > .github/version.json
          fi

      # Generate changelog and new version based on conventional commits
      - name: Generate Changelog
        id: changelog
        uses: TriPSs/conventional-changelog-action@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          git-message: 'chore(release): {version}'
          preset: 'angular'
          tag-prefix: 'v'
          output-file: 'CHANGELOG.md'
          skip-version-file: 'false'
          skip-on-empty: 'true'
          version-file: '.github/version.json'
          skip-commit: 'true'  # Skip commit as we'll create a PR instead

      # Create release PR if there are conventional commits that require a version bump
      - name: Create Release PR
        if: steps.changelog.outputs.skipped == 'false'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore(release): prepare release ${{ steps.changelog.outputs.version }}'
          title: 'chore(release): prepare release ${{ steps.changelog.outputs.version }}'
          body: |
            # Release v${{ steps.changelog.outputs.version }}
            
            This PR prepares a new release based on conventional commits.
            
            ## Changelog
            ${{ steps.changelog.outputs.clean_changelog }}
            
            This PR was automatically generated by the Conventional Commits workflow.
          branch: release/v${{ steps.changelog.outputs.version }}
          base: main
          labels: release
          draft: false

  # Create GitHub release and tag when release PR is merged
  create-release:
    needs: check-conventional-commits
    if: needs.check-conventional-commits.outputs.should_release == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
      repository-projects: write
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: main

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.check-conventional-commits.outputs.new_tag }}
          name: Release ${{ needs.check-conventional-commits.outputs.new_tag }}
          body: ${{ needs.check-conventional-commits.outputs.changelog }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}